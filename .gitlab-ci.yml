image: docker:stable

stages:
  - setup
  - dockerfile
  - deploy

# Staging
Setup-Staging:
  stage: setup
  image: node:12.15.0-slim
  environment: staging
  script:
    - node ./scripts/generate-env-from-system.js
  artifacts:
    expire_in: 2 hrs
    paths:
      - .env
  only:
    - master

Dockerfile-Staging:
  stage: dockerfile
  environment: staging
  script:
    # Deploy to Docker Registry
    # - cat .env
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_PATH .
    - docker tag registry.gitlab.com/$CI_PROJECT_PATH registry.gitlab.com/$CI_PROJECT_PATH/staging:$CI_COMMIT_SHA
    - docker push registry.gitlab.com/$CI_PROJECT_PATH/staging:$CI_COMMIT_SHA
    - docker rmi registry.gitlab.com/$CI_PROJECT_PATH/staging:$CI_COMMIT_SHA
    - docker rmi $(docker images -q registry.gitlab.com/$CI_PROJECT_PATH)
  only:
    - master

Deploy-Staging:
  stage: deploy
  environment: staging
  script:
    - echo "====== Deploy to production server ======"
    - apk update && apk upgrade
    - apk add git openssh bash
    # Add target server`s secret key
    - mkdir ~/.ssh
    - echo $TARGET_SERVER_SECRET_KEY_BASE64 | base64 -d > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "Test ssh connection"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST"

    # Deploy to server
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker login registry.gitlab.com -u thuedo-stag-depoy -p $GITLAB_DEPLOY_TOKEN"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker pull registry.gitlab.com/$CI_PROJECT_PATH/staging:$CI_COMMIT_SHA"
    # Delete old containers
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker stop thuedo_api_app || true && docker rm thuedo_api_app || true"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker run -d --net="host" --restart always  --name thuedo_api_app --add-host=host.docker.internal:127.0.0.1 registry.gitlab.com/$CI_PROJECT_PATH/staging:$CI_COMMIT_SHA"
    # Delete old images
    # - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker rmi $(docker images -q registry.gitlab.com/thuedo1/web-api/staging)" || true
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker image prune -a -f" || true
  only:
    - master

# Production
Setup-Production:
  stage: setup
  image: node:12.15.0-slim
  environment: production
  script:
    - node ./scripts/generate-env-from-system.js
  artifacts:
    expire_in: 2 hrs
    paths:
      - .env
  only:
    - /^v\d+\.\d+\.\d+$/

Dockerfile-Production:
  stage: dockerfile
  environment: production
  script:
    # Deploy to Docker Registry
    # - cat .env
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_PATH .
    - docker tag registry.gitlab.com/$CI_PROJECT_PATH registry.gitlab.com/$CI_PROJECT_PATH/production:$CI_COMMIT_SHA
    - docker push registry.gitlab.com/$CI_PROJECT_PATH/production:$CI_COMMIT_SHA
    - docker rmi registry.gitlab.com/$CI_PROJECT_PATH/production:$CI_COMMIT_SHA
    - docker rmi $(docker images -q registry.gitlab.com/$CI_PROJECT_PATH)
  only:
    - /^v\d+\.\d+\.\d+$/

Deploy-Production:
  stage: deploy
  environment: production
  script:
    - echo "====== Deploy to production server ======"
    - apk update && apk upgrade
    - apk add git openssh bash
    # Add target server`s secret key
    - mkdir ~/.ssh
    - echo $TARGET_SERVER_SECRET_KEY_BASE64 | base64 -d > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "Test ssh connection"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST"

    # Deploy to server
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker login registry.gitlab.com -u thuedo-deploy -p $GITLAB_DEPLOY_TOKEN"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker pull registry.gitlab.com/$CI_PROJECT_PATH/production:$CI_COMMIT_SHA"
    # Delete old containers
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker stop thuedo_api_app || true && docker rm thuedo_api_app || true"
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker run -d --net="host" --restart always  --name thuedo_api_app registry.gitlab.com/$CI_PROJECT_PATH/production:$CI_COMMIT_SHA"
    # Delete old images
    # - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker rmi $(docker images -q registry.gitlab.com/thuedo1/web-api/production)" || true
    - ssh -o StrictHostKeyChecking=no -T "thuedo@$TARGET_SERVER_HOST" "docker image prune -a -f" || true
  only:
    - /^v\d+\.\d+\.\d+$/
