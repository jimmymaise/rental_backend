image: docker:19.03.12

variables:
  REPOSITORY_URL: 332832652621.dkr.ecr.us-west-2.amazonaws.com/rentalapp_web_api
  TASK_DEFINITION_NAME: web-api
  CLUSTER_NAME: rentalapp-web-api
  SERVICE_NAME: rentalapp-web-api
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.12-dind

before_script:
  - apk add --update --no-cache  nodejs npm yarn curl jq py-pip
  - pip install awscli
  #  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  #  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  #  - aws configure set region $AWS_DEFAULT_REGION
  - $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

build:
  stage: build
  tags:
    - ecs_ecr
  environment: staging
  script:
    # Deploy to Docker Registry
    # - cat .env
    - node ./scripts/generate-env-from-system.js
    - echo "Building image..."
    - docker build -t $REPOSITORY_URL:latest .
    - echo "Tagging image..."
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$IMAGE_TAG
  only:
    # Deploy to Docker Registry
    # - cat .env
    - test_deploy_ecr

deploy:
  stage: deploy
  tags:
    - ecs_ecr
  script:
    - echo $REPOSITORY_URL:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "${TASK_DEFINITION_NAME}" --region "${AWS_DEFAULT_REGION}")
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${AWS_DEFAULT_REGION}" --family "${TASK_DEFINITION_NAME}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}"  --task-definition "${TASK_DEFINITION_NAME}"
  only:
    - test_deploy_ecr
