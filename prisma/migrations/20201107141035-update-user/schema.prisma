// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  Admin
  User
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  passwordHash  String
  name          String?
  bio           String?
  avatarImage   Json? // { id, url }
  coverImage    Json? // { id, url }
  role          UserRole[]
}

model Area {
  id            String      @id @default(uuid())
  region        String
  name          String
  slug          String      @unique
  parentAreaId  String?
  latitude      Float
  longitude     Float
  order         Int?        @default(0)
  isDisabled    Boolean?    @default(false)
  isDeleted     Boolean?    @default(false)
  items         Item[]      @relation(references: [id])
}

model Category {
  id                String      @id @default(uuid())
  name              String
  slug              String      @unique
  imageUrl          String?
  thumbnailImageUrl String?
  coverImageUrl     String?
  parentCategoryId  String?
  order             Int?        @default(0)
  isDisabled        Boolean?    @default(false)
  isDeleted         Boolean?    @default(false)
  items             Item[]      @relation(references: [id])
}

model FileStorage {
  id                String        @id @default(uuid())
  url               String
  name              String
  bucketName        String
  folderName        String
  contentType       String
  createdBy         String
  createdDate       DateTime      @default(now())
  isDeleted         Boolean?      @default(false)
  thumbnailMap      Json? // { 300: { id, url, name, bucketName, folderName } }
}

enum ItemStatus {
  Draft
  Blocked
  Rejected
  Published
}

model Item {
  id                      String          @id @default(uuid())
  name                    String
  slug                    String          @unique
  description             String?
  categories              Category[]      @relation(references: [id])
  areas                   Area[]          @relation(references: [id])
  images                  Json[]
  unavailableForRentDays  DateTime[]
  currentOriginalPrice    Float?
  sellPrice               Float?
  rentPricePerDay         Float?
  rentPricePerWeek        Float?
  rentPricePerMonth       Float?
  currencyCode            String?
  summaryReviewCore       Float?
  summaryReviewCount      Float?
  maxQuantity             Int             @default(1)
  isVerified              Boolean?        @default(false)
  status                  ItemStatus
  note                    String?
  ownerUserId             String
  isDisabled              Boolean?        @default(false)
  isDeleted               Boolean?        @default(false)
  createdDate             DateTime        @default(now())
  updatedDate             DateTime        @default(now())
  updatedBy               String
}

// Item Reviews?
// Renting Request Comments? with attach files
// Cho phep khoa comment, do chu shop khoa, thi comment ko the chinh sua hoac xoa nua
// Renting Request Review

// Log Search Keywork
// Log User Signed In
// Item Yeu Thich
// Luu danh ba nguoi cho thue
// User Notifications
// Log user sharing


enum RentingItemRequestStatus {
  Declined
  Approved
  InProgress
  Completed
}

model RentingItemRequestDetail {
  id                    String              @id @default(uuid())
  quantity              Int                 @default(1)
  amountPerUnit         Float               @default(0)
  totalAmount           Float               @default(0)
  item                  Item  @relation(fields: [itemId], references: [id])
  itemId                String
  rentingItemRequest    RentingItemRequest  @relation(fields: [rentingItemRequestId], references: [id])
  rentingItemRequestId  String
}

model RentingItemRequest {
  id                      String          @id @default(uuid())
  name                    String
  slug                    String          @unique
  description             String?
  totalAmount             Float           @default(0)
  fromDate                DateTime
  toDate                  DateTime
  rentingItemDetails      RentingItemRequestDetail[]
  status                  RentingItemRequestStatus
  ownerUserId             String
  lenderUserId            String
  isDisabled              Boolean?        @default(false)
  isDeleted               Boolean?        @default(false)
  createdDate             DateTime        @default(now())
  updatedDate             DateTime        @default(now())
  updatedBy               String
}

