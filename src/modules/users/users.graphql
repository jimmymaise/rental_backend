input BasePagingInput {
    pageSize: Int
    cursor: String
}
type UserSummary {
    id: ID!
    name: String!
    avatarImage: PublicStorageFile
    currentOrgId:String
    userInfo:UserInfo
}

type UserInfo {
    id: ID!
    currentOrgId: String
    orgIds: [String]
    displayName: String
    bio: String,
    currentOrgDetail:OrgSummaryCache
    orgDetails:[OrgSummaryCache]
    avatarImage: PublicStorageFile
    coverImage: PublicStorageFile
    phoneNumber: String
    email: String
    createdDate: Float
    lastSignedIn: Float
}

type UserPagination {
    items: [UserInfo]
    total: Int
    limit: Int
    offset: Int
}
type UserSummaryPagination {
    items: [UserSummary]
    total: Int
    limit: Int
    offset: String
}

type PublicUserInfo {
    id: ID!
    displayName: String
    currentOrgId: String
    orgIds: [String]
    bio: String
    avatarImage: PublicStorageFile
    coverImage: PublicStorageFile
    phoneNumber: String
    permissions: [String]
}

input UserInfoInput {
    displayName: String
    bio: String
    avatarImage: PublicStorageFileInput
    coverImage: PublicStorageFileInput
    phoneNumber: String
    email: String
}

input UserQuery {
    search: String
    offset: Int
    limit: Int
    sortByFields: [String]
}

type AuthPayload {
    accessToken: String
    refreshToken: String
    user: UserAuth
}

type UserAuth {
    id: ID!
    email: String!
}

type Query {
    whoAmI: UserInfo
    userPublicProfile(userId: String!): PublicUserInfo
    getMyOrgUsersWithPaging(getMyOrgUsersWithPaging:BasePagingInput):UserSummaryPagination
    adminUserListFeed(query: UserQuery): UserPagination
}

type Mutation {
    updateUserInfoData(userInfoData: UserInfoInput!): UserInfo
    signUpByEmail(email: String!, password: String!): AuthPayload
    loginByEmail(email: String!, password: String!): AuthPayload
    logout: Boolean
    refreshUserAccessToken(refresh: String): AuthPayload
    requestResetPassword(email: String!, recaptchaKey: String!): String
    setPasswordByToken(token: String!, password: String!): String
    changePassword(currentPassword: String!, newPassword: String!): AuthPayload
    deleteMyUser(reason: String, recaptchaKey: String!): Boolean
}
