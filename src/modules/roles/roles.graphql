type RoleInfo {
  id: ID!
  name: String
  description: String
  createdDate: Float
  updatedDate: Float
  isDefault: Boolean
  users: [PublicUserInfo]
  orgId: String
  permissions: [PermissionInfo]
}

type RolePagination {
  items: [RoleInfo]
  total: Int
  limit: Int
  offset: Int
}

input CreateRoleInput {
  name: String
  description: String
  permissions: [String]
  users: [String]
}

input UpdateRoleInput {
  id: ID!
  name: String
  description: String
  avatarImage: PublicStorageFileInput
  addUsersToRole: [String]
  removeUsersFromRole: [String]
}

type Query {
  getMyRole: RoleInfo
  getMyOrgRolesWithPaging(
    getMyOrgRolesWithOffsetPagingData: BaseOffsetPagingInput
  ): RolePagination
}

type Mutation {
  updateRole(updateRoleInput: UpdateRoleInput!): RoleInfo
  createRole(createRoleInput: CreateRoleInput!): RoleInfo
}
