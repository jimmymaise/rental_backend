type ChatConversation {
  id: ID!
}

type ChatMessage {
  id: ID!
  content: String
  replyToId: String
  chatConvsersationId: String
  fromUserId: String
  fromUserInfo: UserInfo
  isRead: Boolean
  createdDate: Float
}

type ChatMessageInfo {
  unReadCount: Int
}

type ConversationItem {
  id: ID!
  lastMessages: [ChatMessage]
  members: [UserInfo]
  isVisible: Boolean
}

type ConversationPagination {
  items: [ConversationItem]
  total: Int
  limit: Int
  offset: Int
}

input ConversationQuery {
  offset: Int
  limit: Int
}

type Mutation {
  generateChatConversationWith(chatWithUserId: String!): ChatConversation
}

type Query {
  feedMyConversations(query: ConversationQuery): ConversationPagination
  feedChatMessageInfo: ChatMessageInfo
}
