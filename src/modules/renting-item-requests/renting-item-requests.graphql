input RentingItemRequestInput {
  itemId: String!
  fromDate: Float!
  toDate: Float!
}

input UpdateItemRequestStatusInput {
  rentingRequestId: String!
  comment: String
  actualTotalAmount: Float
  files: [PublicStorageFileInput]
}

type RentingItemCachedInfo {
  name: String
  images: [PublicStorageFile]
  rentPricePerDay: Float
  rentPricePerWeek: Float
  rentPricePerMonth: Float
}

type RentingItemRequest {
  id: String
  rentingItem: Item
  itemId: String
  totalAmount: Float
  actualTotalAmount: Float
  rentTotalQuantity: Int
  fromDate: Float
  toDate: Float
  status: String
  ownerUserId: String
  ownerUserDetail: UserInfo
  lenderUserId: String
  lenderUserDetail: UserInfo
  createdDate: Float
  updatedDate: Float
  permissions: [String]
}

type RentingItemRequestActivity {
  id: String
  rentingItemRequestId: String
  comment: String
  type: String
  files: [PublicStorageFile]
  createdDate: Float
  updatedDate: Float
  createdBy: UserInfo
  updatedBy: UserInfo
}

input RentingItemRequestQuery {
  offset: Int
  limit: Int
  includes: [String]
  sortByFields: [String]
}

type RentingItemRequestPagination {
  items: [RentingItemRequest]
  total: Int
  limit: Int
  offset: Int
}

input RentingItemRequestActivityQuery {
  offset: Int
  limit: Int
}

type RentingItemRequestActivityPagination {
  items: [RentingItemRequestActivity]
  total: Int
  limit: Int
  offset: Int
}

input CalcAmountInput {
  rentPricePerDay: Float
  rentPricePerWeek: Float
  rentPricePerMonth: Float
  fromDate: Float
  toDate: Float
  quantity: Int
}

type CalcAmountResult {
  fromDate: Float
  toDate: Float
  rentPricePerDay: Float
  rentPricePerWeek: Float
  rentPricePerMonth: Float
  quantity: Int
  countOfDay: Int
  countOfWeek: Int
  countOfMonth: Int
  totalAmount: Float
  dayAmount: Float
  weekAmount: Float
  monthAmount: Float
}

type Mutation {
  newRequest(requestData: RentingItemRequestInput!): RentingItemRequest
  cancelRequest(data: UpdateItemRequestStatusInput!): RentingItemRequest
  approveRequest(data: UpdateItemRequestStatusInput!): RentingItemRequest
  declineRequest(data: UpdateItemRequestStatusInput!): RentingItemRequest
  startRequest(data: UpdateItemRequestStatusInput!): RentingItemRequest
  completeRequest(data: UpdateItemRequestStatusInput!): RentingItemRequest
  commentOnRequest(
    data: UpdateItemRequestStatusInput!
  ): RentingItemRequestActivity
}

type Query {
  # findAllRequestFromMe(query: RentingItemRequestQuery): RentingItemRequestPagination
  # findAllRequestToMe(query: RentingItemRequestQuery): RentingItemRequestPagination
  findAllRequest(query: RentingItemRequestQuery): RentingItemRequestPagination
  findAllActivityRequest(
    requestId: String!
    query: RentingItemRequestActivityQuery
  ): RentingItemRequestActivityPagination
  calcAmount(data: CalcAmountInput): CalcAmountResult
}
